@page "/PageThanhToan"
@using System.Text.Json
@using SanGiaoDich_BrotherHood.Shared.Models
@inject HttpClient http
@inject NavigationManager navigation
@inject IJSRuntime jsruntime
@code {
    private Bill bill = new Bill();
    private List<CartItemUser> selectedCartItems = new();
    private decimal totalPrice = 0;
    private SellerInfo sellerInfo;
    private List<AddressDetail> addresses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Lấy thông tin giỏ hàng từ localStorage
            var selectedItemsJson = await jsruntime.InvokeAsync<string>("localStorage.getItem", "selectedCartItems");
            if (!string.IsNullOrEmpty(selectedItemsJson))
            {
                selectedCartItems = JsonSerializer.Deserialize<List<CartItemUser>>(selectedItemsJson) ?? new List<CartItemUser>();
                totalPrice = selectedCartItems.Sum(item => item.Price * item.Quantity);
            }

            // Lấy thông tin người dùng
            bill.UserName = await jsruntime.InvokeAsync<string>("localStorage.getItem", "username") ?? string.Empty;

            // Lấy thông tin người bán dựa trên username của sản phẩm
            var firstProduct = selectedCartItems.FirstOrDefault();
            if (firstProduct != null)
            {
                var response = await http.GetFromJsonAsync<SellerInfo>($"api/User/GetAccountInfoByName/{firstProduct.UserName}");
                if (response != null)
                {
                    sellerInfo = response;
                }
            }

            addresses = await http.GetFromJsonAsync<List<AddressDetail>>($"api/AddressDetail/{bill.UserName}");
        }
        catch (Exception ex)
        {
            await jsruntime.InvokeVoidAsync("alert", $"Đã xảy ra lỗi khi tải dữ liệu: {ex.Message}");
        }
    }

    private async Task PlaceOrder()
    {
        if (selectedCartItems == null || !selectedCartItems.Any())
        {
            await jsruntime.InvokeVoidAsync("alert", "Bạn chưa chọn sản phẩm nào.");
            return;
        }

        bill.Total = totalPrice;
        bill.OrderDate = DateTime.Now;
        bill.Status = "Chờ xác nhận";
        bill.PaymentType = "Thanh toán bằng tiền mặt";

        try
        {
            var response = await http.PostAsJsonAsync("api/Bill/AddBill", bill);

            if (response.IsSuccessStatusCode)
            {
                var createdBill = await response.Content.ReadFromJsonAsync<Bill>();

                foreach (var item in selectedCartItems)
                {
                    var billDetail = new BillDetail
                        {
                            IDBill = createdBill.IdBill,
                            IDProduct = item.IdProduct,
                            Quantity = item.Quantity,
                            Price = item.Price,
                            CreatedDate = DateTime.Now
                        };

                    var billDetailResponse = await http.PostAsJsonAsync("api/BillDetail/AddBillDetail", billDetail);
                    if (!billDetailResponse.IsSuccessStatusCode)
                    {
                        var error = await billDetailResponse.Content.ReadAsStringAsync();
                        await jsruntime.InvokeVoidAsync("alert", $"Đã có lỗi khi thêm chi tiết đơn hàng: {error}");
                    }
                }

                // Xóa từng sản phẩm khỏi giỏ hàng sau khi thanh toán thành công
                foreach (var item in selectedCartItems)
                {
                    var deleteResponse = await http.DeleteAsync($"api/CartItem/delete/{item.CartItemID}");
                    if (!deleteResponse.IsSuccessStatusCode)
                    {
                        var error = await deleteResponse.Content.ReadAsStringAsync();
                        await jsruntime.InvokeVoidAsync("alert", $"Không thể xóa sản phẩm {item.ProductName} khỏi giỏ hàng: {error}");
                    }
                }

                // Cập nhật giao diện
                selectedCartItems.Clear();
                totalPrice = 0;
                await jsruntime.InvokeVoidAsync("alert", "Đặt hàng thành công");
                navigation.NavigateTo("/");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                await jsruntime.InvokeVoidAsync("alert", $"Đặt hàng thất bại: {error}");
            }
        }
        catch (Exception ex)
        {
            await jsruntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra: {ex.Message}");
        }
    }

    private async void selectAddress(int id)
    {
        var address = addresses.Where(x => x.IDAddress == id).FirstOrDefault();
        if (address != null)
        {
            bill.DeliveryAddress = $"{address.AdditionalDetail}, {address.Wardcommune}, {address.District}, {address.ProvinceCity}";
            await jsruntime.InvokeVoidAsync("hideModal", "modalAddress");
        }
    }

    public class Bill
    {
        public int IdBill { get; set; }
        public string UserName { get; set; }
        public decimal Total { get; set; }
        public DateTime OrderDate { get; set; }
        public string Status { get; set; }
        public string PaymentType { get; set; }
        public string FullName { get; set; }
        public string Email { get; set; }
        public string DeliveryAddress { get; set; }
        public string PhoneNumber { get; set; }
        public List<BillDetail> BillDetails { get; set; } = new();
    }

    public class CartItemUser
    {
        public int CartItemID { get; set; }
        public int IdCart { get; set; }
        public int IdProduct { get; set; }
        public string ProductName { get; set; }
        public decimal Price { get; set; }
        public int Quantity { get; set; }
        public string ImageUrl { get; set; }
        public string CategoryName { get; set; }
        public bool IsSelected { get; set; }
        public string UserName { get; set; }
    }

    public class BillDetail
    {
        public int IDBill { get; set; }
        public int IDProduct { get; set; }
        public int Quantity { get; set; }
        public decimal Price { get; set; }
        public DateTime CreatedDate { get; set; }
    }
    public class SellerInfo
    {
        public string FullName { get; set; }
        public string PhoneNumber { get; set; }
        public string Email { get; set; }
        public string AvatarUrl { get; set; }
    }
}
<style>


</style>

<div class="container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="bi bi-house"></i> Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Giỏ hàng</a></li>
        <li class="breadcrumb-item"><a href="#">Thanh toán hóa đơn</a></li>
    </ul>
</div>

<div class="checkout-container shadow container my-4 mb-5">
    <div class="row">
        <!-- User Information Section -->
        <form class="col-md-7 bg-success text-white p-4 rounded">
            <h1 class="mb-4 text-center title">Thanh toán đơn hàng</h1>
            <h2 class="subtitle">
                <i class="fas fa-user-circle icon"></i>
                Thông tin người dùng
            </h2>

            <div class="row g-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="username">
                            <i class="fas fa-user" style="color: #ffffff; margin-right: 10px;"></i>
                            Họ và tên
                        </label>
                        <input type="text" class="form-control" id="fullName" @bind="bill.FullName" placeholder="Nhập tên" required>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="email">
                            <i class="fas fa-envelope" style="color: #ffffff; margin-right: 10px;"></i>
                            Email
                        </label>
                        <input type="email" class="form-control" id="email" @bind="bill.Email" placeholder="Nhập email" required>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <label for="address">
                            <i class="fas fa-map-marker-alt" style="color: #ffffff; margin-right: 10px;"></i>
                            Địa chỉ nhận hàng
                        </label>
                        <textarea class="form-control" id="deliveryAddress" @bind="bill.DeliveryAddress" placeholder="Địa chỉ cụ thể, quận/huyện, xã/phường, tỉnh/thành phố"></textarea>
                        <a class="custom-link" style="color:white;" data-bs-toggle="modal" data-bs-target="#modalAddress">Tùy chỉnh</a>
                    </div>

                    <!--Modal địa chỉ-->
                    <div class="modal fade" id="modalAddress" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="staticBackdropLabel">Địa chỉ của bạn</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="mb-3 col-md-10 offset-1">
                                            <table class="table table-striped table-bordered">
                                                <tbody>
                                                    @if (addresses != null)
                                                    {
                                                        foreach (var x in addresses)
                                                        {
                                                            <tr>
                                                                <td class="text-black">@x.AdditionalDetail, @x.Wardcommune, @x.District, @x.ProvinceCity</td>
                                                                <td>
                                                                    <button type="button" class="btn btn-success" @onclick="() => selectAddress(x.IDAddress)">
                                                                        Chọn
                                                                    </button>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p class="text-black">Bạn chưa có địa chỉ</p>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!---->

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="phone">
                            <i class="fas fa-phone" style="color: #ffffff; margin-right: 10px;"></i>
                            Số điện thoại
                        </label>
                        <input type="text" class="form-control" id="phoneNumber" @bind="bill.PhoneNumber" placeholder="Nhập số điện thoại" required>
                    </div>
                </div>
            </div>
        </form>

        <div class="col-md-5 bg-light text-dark p-4 shadow-sm rounded">
            <h2 class="mb-4 text-success">
                <i class="fas fa-box-open" style="color: #28a745; margin-right: 10px;"></i> Thông tin sản phẩm
            </h2>
            <div class="product-info">
                <div class="product-info">
                    <div class="product-container bg-white p-4 rounded shadow-sm mb-4">
                        @if (selectedCartItems != null && selectedCartItems.Any())
                        {
                            @foreach (var item in selectedCartItems)
                            {
                                <div class="product-item mb-3 d-flex align-items-center border-bottom pb-3">
                                    <img src="@item.ImageUrl" alt="Product Image" class="img-fluid rounded" style="max-width: 90px; margin-right: 15px;">
                                    <div class="product-details">
                                        <span class="product-name" style="font-weight: bolder;">@item.ProductName</span>
                                        <div class="product-price-quantity d-flex align-items-center mt-2">
                                            <i class="fas fa-tag text-success mr-2"></i>
                                            <span class="product-price">Giá: @($"{item.Price:N0} VNĐ")</span>
                                        </div>
                                        <div class="product-quantity d-flex align-items-center mt-2">
                                            <i class="fas fa-box text-success mr-2"></i>
                                            <span>Số lượng: @item.Quantity</span>
                                        </div>
                                    </div>
                                </div>
                            }

                            <h4>Tổng cộng: @($"{selectedCartItems.Sum(i => i.Price):N0} VNĐ")</h4>
                        }
                        else
                        {
                            <p>Không có sản phẩm nào được chọn để thanh toán.</p>
                        }
                    </div>
                </div>

                <div class="total-amount mt-3 p-3 rounded bg-light shadow-sm" style="border: 1px solid #ddd;">
                    <h4 class="text-dark font-weight-bold mb-3 text-center">
                        <i class="fas fa-wallet text-success me-2" style="font-size: 1.5em;"></i> Tổng tiền
                    </h4>
                    <div class="d-flex justify-content-between mb-2">
                        <span class="text-dark">Giá sản phẩm:</span>
                        <span class="font-weight-bold">@($"{totalPrice:N0} VNĐ")</span>
                    </div>
                    <hr class="bg-success mt-2" style="height: 2px; border-radius: 5px;">
                    <div class="d-flex justify-content-between">
                        <span class="text-danger font-weight-bold" style="font-size: 1.5em;">Tổng cộng:</span>
                        <span class="text-danger font-weight-bold" style="font-size: 1.5em;">@($"{totalPrice:N0} VNĐ")</span>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="text-center mt-4">
                    <button class="btn btn-success btn-lg" data-bs-toggle="modal" data-bs-target="#orderModal">Đặt hàng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal thông báo đặt hàng -->
<div class="modal fade" id="orderModal" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderModalLabel">Thông báo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Đơn hàng của bạn đã được đặt thành công! Chúng tôi sẽ liên hệ với bạn sớm nhất có thể.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
    function hideModal(modalId) {
        const modal = bootstrap.Modal.getInstance(document.getElementById(modalId));
        if (modal) {
            modal.hide();
        }
    }
</script>
