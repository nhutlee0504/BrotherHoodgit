@page "/post"
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using SanGiaoDich_BrotherHood.Shared.Dto
@using SanGiaoDich_BrotherHood.Shared.Models

<div class="container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="bi bi-house"></i> Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Đăng sản phẩm</a></li>
    </ul>
</div>

<style>

    .image-preview img {
<<<<<<< HEAD
        max-width: 100%; 
        max-height: 100%;
        object-fit: cover; 
    }

    input[type=file] {
        width: 350px;
        max-width: 100%;
        color: #444;
        padding: 3px; 
        background: #fff;
        border-radius: 8px; 
        border: 1px solid #555;
    }

        input[type=file]::file-selector-button {
            margin-right: 15px; 
            border: none;
            background: #084cdf;
            padding: 5px 15px;
            border-radius: 8px; 
            color: #fff;
            cursor: pointer;
            transition: background .2s ease-in-out;
        }


        input[type=file]::file-selector-button:hover {
            background: #0d45a5;
        }

    .image-preview {
        position: relative;
        width: 100%;
        max-width: 350px;
        height: auto;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        background-color: #f9f9f9;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .image-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
            border-radius: 4px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .image-preview img:hover {
                transform: scale(1.05);
                box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);
            }

=======
        max-width: 100%;
        max-height: 100%;
        object-fit: cover;
    }
>>>>>>> origin/MinhNhut
</style>

<h4>Thông tin sản phẩm</h4>

<div class="container">
    <div class="form-group mb-3">
        <label for="ProductImages"><i class="fas fa-image"></i> Hình ảnh sản phẩm:</label>
        <div class="row">
            @for (int i = 0; i < 3; i++)
            {
                <div class="col-md-4">
                    <div class="image-preview border d-flex align-items-center justify-content-center" style="height: 200px;">
                        @if (selectedFiles.Count > i && selectedFiles[i] != null)
                        {
                            
                            <img src="@selectedFiles[i].DataUrl" class="img-fluid" alt="Hình ảnh sản phẩm" />
                        }
                        else
                        {
                            <span class="placeholder-text">Chưa có hình ảnh</span>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="row mt-2">
            <div class="col-md-5 d-flex align-items-center">
                <InputFile OnChange="HandleFileSelected" multiple accept="image/*" />
            </div>
            <div class="col-md-7 d-flex justify-content-end align-items-end">
                <span>Xem quy định về <a href="#"><i class="fas fa-info-circle"></i> Cách chụp ảnh và quay sản phẩm</a></span>
            </div>
        </div>
    </div>

<<<<<<< HEAD
        <div class="row">
            <!-- Tên sản phẩm -->
            <div class="col-md-6 mb-3">
                <label for="ProductName"><i class="fas fa-tag"></i> Tên sản phẩm:</label>
                <input type="text" @bind="ProductName" class="form-control" placeholder="Nhập tên sản phẩm" id="ProductName" />
            </div>

            <!-- Loại sản phẩm -->
            <div class="col-md-6 mb-3">
                <label for="ProductCategory"><i class="fas fa-box"></i> Loại sản phẩm:</label>
                <select @bind="ProductCategoryId" class="form-control" id="ProductCategory">
                    <option value="">Chọn loại sản phẩm</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.IDCategory">@category.NameCate</option>
                    }
                </select>
            </div>

            <!-- Giá sản phẩm -->
            <div class="col-md-6 mb-3">
                <label for="ProductPrice">
                    <img src="/AnhGiaoDien/business.png" style="width:16px;" /> Giá sản phẩm:
                </label>
                <input type="number" @bind="ProductPrice" class="form-control" placeholder="Nhập giá sản phẩm" id="ProductPrice" />
            </div>

            <!-- Số lượng sản phẩm -->
            <div class="col-md-6 mb-3">
                <label for="ProductQuantity"><i class="fas fa-sort-numeric-up"></i> Số lượng sản phẩm:</label>
                <input type="number" @bind="ProductQuantity" class="form-control" placeholder="Nhập số lượng sản phẩm" id="ProductQuantity" />
            </div>
        </div>
=======
    <div class="form-group mb-3">
        <label for="ProductName"><i class="fas fa-tag"></i> Tên sản phẩm:</label>
        <input type="text" @bind="ProductName" class="form-control" placeholder="Nhập tên sản phẩm" id="ProductName" />
    </div>
>>>>>>> origin/MinhNhut

    <div class="form-group mb-3">
        <label for="ProrityLevel"><i class="fas fa-exclamation"></i> :</label>
        <select @bind="ProrityLevel" class="form-control" id="ProrityLevel">
            <option value="">Chọn mức độ ưu tiên</option>
            <option value="Phổ thông">Phổ thông</option>
            <option value="Ưu tiên">Ưu tiên</option>
        </select>
    </div>

<<<<<<< HEAD
    <!-- Mô tả sản phẩm -->
=======
    <div class="form-group mb-3">
        <label for="ProductPrice"><img src="/AnhGiaoDien/business.png" style="width:16px;" /> Giá sản phẩm:</label>
        <input type="number" @bind="ProductPrice" class="form-control" placeholder="Nhập giá sản phẩm" id="ProductPrice" />
    </div>

    <div class="form-group mb-3">
        <label for="ProductQuantity"><i class="fas fa-sort-numeric-up"></i> Số lượng sản phẩm:</label>
        <input type="number" @bind="ProductQuantity" class="form-control" placeholder="Nhập số lượng sản phẩm" id="ProductQuantity" />
    </div>

    <div class="form-group mb-3">
        <label for="ProrityLevel"><i class="fas fa-exclamation"></i> Mức độ ưu tiên:</label>
        <select @bind="ProrityLevel" class="form-control" id="ProrityLevel">
            <option value="">Chọn mức độ ưu tiên</option>
            <option value="Phổ thông">Phổ thông</option>
            <option value="Ưu tiên">Ưu tiên</option>
        </select>
    </div>



>>>>>>> origin/MinhNhut
    <div class="form-group">
        <label for="ProductDescription"><i class="fas fa-info-circle"></i> Mô tả sản phẩm chi tiết:</label>
        <textarea @bind="Description" class="form-control" id="ProductDescription" rows="4" placeholder="Nhập mô tả chi tiết về sản phẩm..."></textarea>

        <small class="form-text text-muted">
            <i class="fas fa-lightbulb"></i> Gợi ý:
            <ul>
                <li>Chất liệu: 100% cotton, mềm mại và thoáng khí.</li>
                <li>Thiết kế: Cổ áo đính cúc, tay dài có thể gấp lên dễ dàng.</li>
                <li>Màu sắc: Trắng, xanh dương, xám.</li>
                <li>Kích thước: S, M, L, XL.</li>
                <li>Chất lượng: Dệt chắc chắn, không phai màu sau nhiều lần giặt.</li>
            </ul>
        </small>
    </div>

    <div class="row">
        <div class="col-md-12 d-flex justify-content-end">
            <div class="text-right mb-3">
                <button @onclick="SaveProduct" class="btn btn-success"><i class="fas fa-check"></i> Đăng bán</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string ProductName { get; set; }
    private decimal ProductPrice { get; set; }
    private int ProductQuantity { get; set; }
    private int ProductCategoryId { get; set; }
    private string Description { get; set; }
    private string ProrityLevel { get; set; }
    private List<Category> categories = new List<Category>();
    private List<ImageFile> selectedFiles = new List<ImageFile> { null, null, null };

    private class ImageFile
    {
        public string DataUrl { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadUserData();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi tải dữ liệu: {ex.Message}");
        }
    }

    private async Task LoadUserData()
    {
        try
        {
            categories = await HttpClient.GetFromJsonAsync<List<Category>>("api/Category/GetCategories") ?? new List<Category>();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Không thể tải danh sách loại sản phẩm: {ex.Message}");
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        try
        {
            var files = e.GetMultipleFiles(3);

            foreach (var file in files)
            {
                for (int i = 0; i < selectedFiles.Count; i++)
                {
                    if (selectedFiles[i] == null)
                    {
                        selectedFiles[i] = new ImageFile
                            {
                                DataUrl = await GetImageDataUrl(file)
                            };
                        break;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi khi chọn ảnh: {ex.Message}");
        }
    }

    private async Task<string> GetImageDataUrl(IBrowserFile file)
    {
        try
        {
            using var stream = file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 3);
            var buffer = new byte[file.Size];
            await stream.ReadAsync(buffer);
            return $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Không thể đọc dữ liệu hình ảnh: {ex.Message}");
            return string.Empty;
        }
    }

    private async Task SaveProduct()
    {
<<<<<<< HEAD
        var productDto = new ProductDto
            {
                Name = ProductName,
                Price = ProductPrice,
                Quantity = ProductQuantity,
                CategoryId = ProductCategoryId,
                Description = Description,
                ProrityLevel = ProrityLevel
            };

        var response = await HttpClient.PostAsJsonAsync("api/product/AddProduct", productDto);

        if (response.IsSuccessStatusCode)
=======
        try
>>>>>>> origin/MinhNhut
        {
            var productDto = new ProductDto
                {
                    Name = ProductName,
                    Price = ProductPrice,
                    Quantity = ProductQuantity,
                    CategoryId = ProductCategoryId,
                    Description = Description,
                    ProrityLevel = ProrityLevel
                };

            var response = await HttpClient.PostAsJsonAsync("api/product/AddProduct", productDto);

            if (response.IsSuccessStatusCode)
            {
                var createdProduct = await response.Content.ReadFromJsonAsync<Product>();
                var productId = createdProduct?.IDProduct ?? 0;

                if (productId > 0)
                {
                    await UploadImages(productId);
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("alert", "Không thể lấy thông tin sản phẩm mới tạo.");
                }
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi thêm sản phẩm: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi thêm sản phẩm: {ex.Message}");
        }
    }

    private async Task UploadImages(int productId)
    {
        try
        {
            var content = new MultipartFormDataContent();

            foreach (var file in selectedFiles)
            {
                if (file != null)
                {
                    var byteArray = Convert.FromBase64String(file.DataUrl.Split(",")[1]);
                    var fileContent = new ByteArrayContent(byteArray);
                    fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("image/jpeg");

                    content.Add(fileContent, "files", $"image_{Guid.NewGuid()}.jpg");
                }
            }

            var uploadResponse = await HttpClient.PostAsync($"api/ImageProduct/ImageProduct/{productId}/upload", content);

            if (uploadResponse.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Sản phẩm đã được thêm thành công!");
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                var errorMessage = await uploadResponse.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi tải ảnh: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi tải ảnh: {ex.Message}");
        }
    }
}
