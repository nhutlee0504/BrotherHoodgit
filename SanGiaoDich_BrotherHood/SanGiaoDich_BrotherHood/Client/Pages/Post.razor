<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
<script src="js/quillHelper.js"></script>

@page "/post"
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using SanGiaoDich_BrotherHood.Shared.Dto
@using SanGiaoDich_BrotherHood.Shared.Models

<div class="container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="bi bi-house"></i> Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Đăng sản phẩm</a></li>
    </ul>
</div>
<style>
    .image-preview img {
        max-width: 100%; /* Giới hạn chiều rộng tối đa của hình ảnh là 100% của khung */
        max-height: 100%; /* Giới hạn chiều cao tối đa của hình ảnh là 100% của khung */
        object-fit: cover; /* Cắt hình ảnh để phù hợp với khung mà không làm méo hình */
    }

</style>
<h4>Thông tin sản phẩm</h4>

<div class="container">
    <!-- Hình ảnh sản phẩm -->
    <div class="form-group mb-3">
        <label for="ProductImages"><i class="fas fa-image"></i> Hình ảnh sản phẩm:</label>
        <div class="row">
            @for (int i = 0; i < 3; i++)
            {
                <div class="col-md-4">
                    <div class="image-preview border d-flex align-items-center justify-content-center"
                         style="height: 200px;">
                        @if (selectedFiles.Count > i && selectedFiles[i] != null)
                        {
                            <img src="@selectedFiles[i].DataUrl" class="img-fluid" alt="Hình ảnh sản phẩm" />
                        }
                        else
                        {
                            <span class="placeholder-text">Chưa có hình ảnh</span>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-2 d-flex align-items-center">
                <InputFile OnChange="HandleFileSelected" multiple accept="image/*" />
            </div>
            <div class="col-md-8 d-flex align-items-center">
                <span>Xem quy định về <a href="#"><i class="fas fa-info-circle"></i> Cách chụp ảnh và quay sản phẩm</a></span>
            </div>
        </div>
    </div>

    <!-- Tên sản phẩm -->
    <div class="form-group mb-3">
        <label for="ProductName"><i class="fas fa-tag"></i> Tên sản phẩm:</label>
        <input type="text" @bind="ProductName" class="form-control" placeholder="Nhập tên sản phẩm" id="ProductName" />
    </div>

    <!-- Loại sản phẩm -->
    <div class="form-group mb-3">
        <label for="ProductCategory"><i class="fas fa-box"></i> Loại sản phẩm:</label>
        <select @bind="ProductCategoryId" class="form-control" id="ProductCategory">
            <option value="">Chọn loại sản phẩm</option>
            @foreach (var category in categories)
            {
                <option value="@category.IDCategory">@category.NameCate</option>
            }
        </select>
    </div>

    <!-- Giá sản phẩm -->
    <div class="form-group mb-3">
        <label for="ProductPrice"><img src="/AnhGiaoDien/business.png" style="width:16px;" /> Giá sản phẩm:</label>
        <input type="number" @bind="ProductPrice" class="form-control" placeholder="Nhập giá sản phẩm" id="ProductPrice" />
    </div>

    <!-- Số lượng sản phẩm -->
    <div class="form-group mb-3">
        <label for="ProductQuantity"><i class="fas fa-sort-numeric-up"></i> Số lượng sản phẩm:</label>
        <input type="number" @bind="ProductQuantity" class="form-control" placeholder="Nhập số lượng sản phẩm" id="ProductQuantity" />
    </div>

    <!-- Mô tả sản phẩm -->
    <div class="form-group">
        <label for="ProductDescription"><i class="fas fa-info-circle"></i> Mô tả sản phẩm chi tiết:</label>
        <textarea @bind="Description" class="form-control" id="ProductDescription" rows="4" placeholder="Nhập mô tả chi tiết về sản phẩm..."></textarea>

        <small class="form-text text-muted">
            <i class="fas fa-lightbulb"></i> Gợi ý:
            <ul>
                <li>Chất liệu: 100% cotton, mềm mại và thoáng khí.</li>
                <li>Thiết kế: Cổ áo đính cúc, tay dài có thể gấp lên dễ dàng.</li>
                <li>Màu sắc: Trắng, xanh dương, xám.</li>
                <li>Kích thước: S, M, L, XL.</li>
                <li>Chất lượng: Dệt chắc chắn, không phai màu sau nhiều lần giặt.</li>
            </ul>
        </small>
    </div>

    <div class="row">
        <div class="col-md-12 d-flex justify-content-end">
            <div class="text-right mb-3">
                <button @onclick="SaveProduct" class="btn btn-success"><i class="fas fa-check"></i> Đăng bán</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string ProductName { get; set; }
    private decimal ProductPrice { get; set; }
    private int ProductQuantity { get; set; }
    private int ProductCategoryId { get; set; }
    private string Description { get; set; }
    private List<Category> categories = new List<Category>();

    private List<ImageFile> selectedFiles = new List<ImageFile>
    {
        null, null, null  // Khởi tạo ba khung trống
    };

    private class ImageFile
    {
        public string DataUrl { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadUserData();
    }

    private async Task LoadUserData()
    {
        categories = await HttpClient.GetFromJsonAsync<List<Category>>("api/Category/GetCategories");
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles(3); // Giới hạn tối đa 3 tệp

        foreach (var file in files)
        {
            for (int i = 0; i < selectedFiles.Count; i++)
            {
                if (selectedFiles[i] == null)
                {
                    selectedFiles[i] = new ImageFile
                        {
                            DataUrl = await GetImageDataUrl(file)
                        };
                    break; // Thoát khỏi vòng lặp khi đã thêm tệp vào danh sách
                }
            }
        }
    }

    private async Task<string> GetImageDataUrl(IBrowserFile file)
    {
        using var stream = file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 3); // Giới hạn 3MB
        var buffer = new byte[file.Size];
        await stream.ReadAsync(buffer);
        return $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task SaveProduct()
    {
        var productDto = new ProductDto
            {
                Name = ProductName,
                Price = ProductPrice,
                Quantity = ProductQuantity,
                CategoryId = ProductCategoryId,
                Description = Description
            };

        var response = await HttpClient.PostAsJsonAsync("api/product/AddProduct", productDto);

        if (response.IsSuccessStatusCode)
        {
            var createdProduct = await response.Content.ReadFromJsonAsync<Product>();
            var productId = createdProduct.IDProduct;

            var content = new MultipartFormDataContent();

            foreach (var file in selectedFiles)
            {
                if (file != null)
                {
                    var byteArray = Convert.FromBase64String(file.DataUrl.Split(",")[1]);
                    var fileContent = new ByteArrayContent(byteArray);
                    fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("image/jpeg");

                    // Không cần chỉ định tên file cụ thể ở đây
                    content.Add(fileContent, "files", $"image_{Guid.NewGuid()}.jpg"); // Duy trì tên duy nhất cho từng upload
                }
            }

            var uploadResponse = await HttpClient.PostAsync($"api/ImageProduct/ImageProduct/{productId}/upload", content);

            if (uploadResponse.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Sản phẩm đã được thêm thành công!");
                NavigationManager.NavigateTo("/");
            }
            else
            {
                var errorMessage = await uploadResponse.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi tải ảnh: {errorMessage}");
            }
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi xảy ra khi thêm sản phẩm: {errorMessage}");
        }
    }
}
