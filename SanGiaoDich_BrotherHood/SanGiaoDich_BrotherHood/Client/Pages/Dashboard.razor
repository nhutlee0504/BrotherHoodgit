@page "/admin/dashboard"
@using SanGiaoDich_BrotherHood.Shared.Models
@layout AdminLayout
@inject HttpClient Http


@if (isLoading)
{
    <p>Đang tải dữ liệu...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}
else
{
    <div>
        <table class="payment-requests-table">
            <thead>
                <tr>
                    <th class="text-center">Mã Giao Dịch</th>
                    <th class="text-center">Người Dùng</th>
                    <th class="text-center">Số Tiền</th>
                    <th class="text-center">Mô Tả</th>
                    <th class="text-center">Thời Gian</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var req in paymentRequests)
                {
                    <tr>
                        <td>@req.TxnRef</td>
                        <td class="text-center">@req.UserName</td>
                        <td class="text-center">@req.Amount.ToString("N0") đồng </td>
                        <td>@req.OrderDescription</td>
                        <td class="text-center">@req.CreatedDate</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}

<style>
   
    .payment-requests-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        font-family: Arial, sans-serif;
    }
        .payment-requests-table thead {
            background-color: #f1f1f1;
            color: #333;
            text-align: left;
            font-weight: bold;
        }
        .payment-requests-table th, .payment-requests-table td {
            padding: 12px;
            border: 1px solid #ddd;
            text-align: left;
            vertical-align: middle;
        }
            .payment-requests-table td:nth-child(3) {
                text-align: right;
            }
            .payment-requests-table td:nth-child(5) {
                text-align: center;
            }
        .payment-requests-table tr:hover {
            background-color: #f9f9f9;
        }

        .payment-requests-table td, .payment-requests-table th {
            font-size: 14px;
            color: #555;
        }
        .payment-requests-table th, .payment-requests-table td {
            min-width: 120px;
        }
        .payment-requests-table td {
            word-wrap: break-word;
        }
</style>

@code {
    private bool isLoading = true;
    private string errorMessage;
    public class PaymentDataModel
    {
        public string OrderId { get; set; }
        public string UserName { get; set; }
        public decimal Amount { get; set; }
        public string OrderDescription { get; set; }
        public bool Success { get; set; }
        public DateTime CreatedDate { get; set; }
        public string PaymentMethod { get; set; }
    }

    private List<PaymentRequestModel> paymentRequests = new();
    private List<PaymentResponseModel> paymentResponses = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            paymentRequests = await Http.GetFromJsonAsync<List<PaymentRequestModel>>("api/payment/requests");
            paymentResponses = await Http.GetFromJsonAsync<List<PaymentResponseModel>>("api/payment/responses");
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải dữ liệu: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
